# Generated by Django 5.2.5 on 2025-09-06 07:27

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_ru', models.CharField(max_length=255, verbose_name='Название блюда на русском')),
                ('name_uz', models.CharField(max_length=255, verbose_name='Название блюда на узбекском')),
                ('category', models.CharField(choices=[('first', 'Первые блюда'), ('second', 'Вторые блюда'), ('dessert', 'Десерты'), ('drink', 'Напитки')], max_length=10, verbose_name='Категория блюда')),
                ('description_ru', models.TextField(verbose_name='Описание блюда на русском')),
                ('description_uz', models.TextField(verbose_name='Описание блюда на узбекском')),
                ('image', models.ImageField(blank=True, null=True, upload_to='products/images/', verbose_name='Картинка блюда')),
                ('video', models.FileField(blank=True, null=True, upload_to='products/videos/', verbose_name='Видео блюда')),
                ('recipe_text', models.TextField(verbose_name='Текст рецепта на русском')),
                ('recipe_text_uz', models.TextField(blank=True, null=True, verbose_name='Текст рецепта на узбекском')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Цена рецепта')),
                ('recipe_image', models.ImageField(blank=True, null=True, upload_to='products/recipe_images/', verbose_name='Доп. картинка рецепта')),
                ('recipe_video', models.FileField(blank=True, null=True, upload_to='products/recipe_videos/', verbose_name='Доп. видео рецепта')),
                ('recipe_file', models.FileField(blank=True, null=True, upload_to='products/files/', verbose_name='Доп. файл рецепта')),
                ('recipe_source_link', models.URLField(blank=True, null=True, verbose_name='Доп. ссылка рецепта')),
            ],
            options={
                'verbose_name': 'Блюдо',
                'verbose_name_plural': 'Блюда',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('telegram_id', models.BigIntegerField(unique=True, verbose_name='Telegram ID пользователя')),
                ('language', models.CharField(choices=[('ru', 'Русский'), ('uz', 'O‘zbek')], default='ru', max_length=2, verbose_name='Выбранный язык')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Профиль пользователя',
                'verbose_name_plural': 'Профили пользователей',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Purchase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('purchase_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата покупки')),
                ('receipt', models.FileField(blank=True, null=True, upload_to='receipts/', verbose_name='Квитанция')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'История покупок и квитанции',
                'verbose_name_plural': 'Истории покупок и квитанций',
            },
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.product')),
            ],
            options={
                'verbose_name': 'Корзина',
                'verbose_name_plural': 'Корзины',
                'unique_together': {('user', 'product')},
            },
        ),
    ]
